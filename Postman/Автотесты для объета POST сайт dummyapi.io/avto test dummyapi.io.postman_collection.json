{
	"info": {
		"_postman_id": "08fb5322-7e5f-4cb3-8847-e96c7b73472c",
		"name": "avto test dummyapi.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26809176"
	},
	"item": [
		{
			"name": "Get post list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Check body data is array\", function () {\r",
							"    pm.expect(jsonData.data).to.be.an('array')\r",
							"    });\r",
							"\r",
							"pm.test(\"Check body data[0].id is string\", function () {\r",
							"    pm.expect(jsonData.data[0].id).to.be.an('String')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[0].email is undefined\", function () {\r",
							"    pm.expect(jsonData.data[0].email).to.be.an('undefined')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[19].id is string\", function () {\r",
							"    pm.expect(jsonData.data[19].id).to.be.an('String')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body data[20] is undefined\", function () {\r",
							"    pm.expect(jsonData.data[20]).to.be.an('undefined')\r",
							"});\r",
							"\r",
							"pm.test(\"Check limit is 20\", function () {\r",
							"    pm.expect(jsonData.limit).to.eql(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Check page is 0\", function () {\r",
							"    pm.expect(jsonData.page).to.eql(0);\r",
							"});\r",
							"\r",
							"pm.test(\"Check body total is number\", function () {\r",
							"    pm.expect(jsonData.total).to.be.a('number')\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}post",
					"host": [
						"{{url}}post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 700ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(700);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.collectionVariables.set(\"userID\", jsonData.id);\r",
							"\r",
							"pm.test(\"Your test name text\", function () {\r",
							"        pm.expect(jsonData.text).to.eql(\"kadafi\");\r",
							"});\r",
							"pm.test(\"Your test name image\", function () {\r",
							"        pm.expect(jsonData.image).to.eql(\"https://img.dummyapi.io/photo-1564694202779-bc908c327862.jpg\");\r",
							"});\r",
							"pm.test(\"Your test name likes\", function () {\r",
							"       pm.expect(jsonData.likes).to.eql(6);\r",
							"    });\r",
							"pm.test(\"Your test name tags\", function () {\r",
							"        pm.expect(jsonData.tags).to.eql([ 'dogs' ]);\r",
							"});\r",
							"pm.test(\"Your test name owner ID\", function () {\r",
							"       pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a109ca\");\r",
							"});\r",
							"pm.test(\"Your test name owner title\", function () {\r",
							"        pm.expect(jsonData.owner.title).to.eql(\"ms\");\r",
							"});\r",
							"pm.test(\"Your test name owner firstName\", function () {\r",
							"        pm.expect(jsonData.owner.firstName).to.eql(\"Sara\");\r",
							"});\r",
							"pm.test(\"Your test name owner lastName\", function () {\r",
							"       pm.expect(jsonData.owner.lastName).to.eql(\"Andersen\");\r",
							"});\r",
							"pm.test(\"Your test name owner picture\", function () {\r",
							"        pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/women/58.jpg\");\r",
							"});\r",
							"pm.test(\"Check body id is string\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate is string\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"text\": \"kadafi\",\r\n        \"image\": \"https://img.dummyapi.io/photo-1564694202779-bc908c327862.jpg\",\r\n        \"likes\": 6,\r\n        \"tags\": \"dogs\",\r\n        \"owner\": \"60d0fe4f5311236168a109ca\"\r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}post/create",
					"host": [
						"{{url}}post"
					],
					"path": [
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_post_by_ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Your test name text\", function () {\r",
							"        pm.expect(jsonData.text).to.eql(\"kadafi\");\r",
							"});\r",
							"pm.test(\"Your test name image\", function () {\r",
							"        pm.expect(jsonData.image).to.eql(\"https://img.dummyapi.io/photo-1564694202779-bc908c327862.jpg\");\r",
							"});\r",
							"pm.test(\"Your test name likes\", function () {\r",
							"       pm.expect(jsonData.likes).to.eql(6);\r",
							"    });\r",
							"pm.test(\"Your test name tags\", function () {\r",
							"        pm.expect(jsonData.tags).to.eql([ 'dogs' ]);\r",
							"});\r",
							"pm.test(\"Your test name owner ID\", function () {\r",
							"       pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a109ca\");\r",
							"});\r",
							"pm.test(\"Your test name owner title\", function () {\r",
							"        pm.expect(jsonData.owner.title).to.eql(\"ms\");\r",
							"});\r",
							"pm.test(\"Your test name owner firstName\", function () {\r",
							"        pm.expect(jsonData.owner.firstName).to.eql(\"Sara\");\r",
							"});\r",
							"pm.test(\"Your test name owner lastName\", function () {\r",
							"       pm.expect(jsonData.owner.lastName).to.eql(\"Andersen\");\r",
							"});\r",
							"pm.test(\"Your test name owner picture\", function () {\r",
							"        pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/women/58.jpg\");\r",
							"});\r",
							"pm.test(\"Check body id is string\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate is string\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}post/{{userID}}",
					"host": [
						"{{url}}post"
					],
					"path": [
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"\r",
							"var jsonData = pm.response.json();\r",
							"\r",
							"pm.test(\"Your test name text\", function () {\r",
							"        pm.expect(jsonData.text).to.eql(\"karamba\");\r",
							"});\r",
							"pm.test(\"Your test name image\", function () {\r",
							"        pm.expect(jsonData.image).to.eql(\"https://img.dummyapi.io/photo-1564694202779-bc908c327862.jpg\");\r",
							"});\r",
							"pm.test(\"Your test name likes\", function () {\r",
							"       pm.expect(jsonData.likes).to.eql(6);\r",
							"    });\r",
							"pm.test(\"Your test name tags\", function () {\r",
							"        pm.expect(jsonData.tags).to.eql([ 'kat' ]);\r",
							"});\r",
							"pm.test(\"Your test name owner ID\", function () {\r",
							"       pm.expect(jsonData.owner.id).to.eql(\"60d0fe4f5311236168a109ca\");\r",
							"});\r",
							"pm.test(\"Your test name owner title\", function () {\r",
							"        pm.expect(jsonData.owner.title).to.eql(\"ms\");\r",
							"});\r",
							"pm.test(\"Your test name owner firstName\", function () {\r",
							"        pm.expect(jsonData.owner.firstName).to.eql(\"Sara\");\r",
							"});\r",
							"pm.test(\"Your test name owner lastName\", function () {\r",
							"       pm.expect(jsonData.owner.lastName).to.eql(\"Andersen\");\r",
							"});\r",
							"pm.test(\"Your test name owner picture\", function () {\r",
							"        pm.expect(jsonData.owner.picture).to.eql(\"https://randomuser.me/api/portraits/women/58.jpg\");\r",
							"});\r",
							"pm.test(\"Check body id is string\", function () {\r",
							"    pm.expect(jsonData.id).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body publishDate is string\", function () {\r",
							"    pm.expect(jsonData.publishDate).to.be.a('string')\r",
							"});\r",
							"\r",
							"pm.test(\"Check body updatedDate is string\", function () {\r",
							"    pm.expect(jsonData.updatedDate).to.be.a('string')\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n        \"text\": \"karamba\",\r\n        \"tags\": \"kat\"\r\n    \r\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}post/{{userID}}",
					"host": [
						"{{url}}post"
					],
					"path": [
						"{{userID}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Status code is OK\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"pm.test(\"Response time is less than 600ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(600);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.collectionVariables.get(\"userID\"));\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{url}}post/{{userID}}",
					"host": [
						"{{url}}post"
					],
					"path": [
						"{{userID}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "app-id",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{app-id}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "userID",
			"value": ""
		}
	]
}